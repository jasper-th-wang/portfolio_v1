---
import Layout from "@/layouts/Layout.astro";
import AboutSection from "@/components/Sections/AboutSection.astro";
import ExperienceSection from "@/components/Sections/ExperienceSection.astro";
import EducationSection from "@/components/Sections/EducationSection.astro";
import SkillsSection from "@/components/Sections/SkillsSection.astro";
import ProjectsSection from "@/components/Sections/ProjectsSection.astro";
import PostsSection from "@/components/Sections/PostsSection.astro";

const sectionComponents = {
  about: AboutSection,
  experience: ExperienceSection,
  education: EducationSection,
  skills: SkillsSection,
  projects: ProjectsSection,
  posts: PostsSection,
};

const myInfo = {
  name: "Jasper Wang",
  title: "Software Developer",
  description:
    "I'm passionate about making cool stuff and solving problems, and I'm currently studying Computer Science at BCIT.",
};
const navItems = [
  "about",
  "skills",
  "projects",
  "education",
  "experience",
  "posts",
];
---

<Layout
  isHome={true}
  title={myInfo.name}
  subtitle={myInfo.title}
  details={myInfo.description}
  navItems={navItems}
>
  {
    navItems.map((section) => {
      const SpecificSectionComponent = sectionComponents[section];
      return (
        <section id={section}>
          <h1>{section.charAt(0).toUpperCase() + section.slice(1)}</h1>
          {SpecificSectionComponent && <SpecificSectionComponent />}
        </section>
      );
    })
  }
</Layout>

<style>
  section {
    padding-top: 0;
    padding-bottom: 6rem;
  }

  section:last-of-type {
    /* padding-bottom: calc(100vh - 12rem - element height); */
    padding-bottom: 0;
  }

  h1 {
    text-transform: uppercase;
    font-size: 1.7rem;
    margin-bottom: 2.5rem;
  }

  h2 {
    font-size: 1rem;
  }

  @media only screen and (min-width: 1024px) {
    section {
      scroll-margin-top: 6rem;
      padding: 0;
      padding-bottom: 6rem;
      opacity: 0.5;
      transition-duration: 500ms;
    }

    .section-focus {
      opacity: 1 !important;
    }
  }
</style>

<script>
  import debounce from "lodash.debounce";
  function alignLastSectionToHeader(): void {
    const header = document.querySelector("header") as HTMLElement;
    const headerPaddingTop = parseInt(
      window.getComputedStyle(header).getPropertyValue("padding-top"),
    );
    const headerPaddingBottom = parseInt(
      window.getComputedStyle(header).getPropertyValue("padding-bottom"),
    );

    const lastSection = document.querySelector(
      "section:last-of-type",
    ) as HTMLElement;

    let lastSectionHeight =
      parseInt(
        window.getComputedStyle(lastSection).getPropertyValue("height"),
      ) -
      parseInt(
        window.getComputedStyle(lastSection).getPropertyValue("padding-bottom"),
      );

    let paddingBottomValue =
      window.innerHeight -
      headerPaddingTop -
      headerPaddingBottom -
      lastSectionHeight;

    lastSection.style.paddingBottom = `${paddingBottomValue.toString()}px`;
  }

  alignLastSectionToHeader();
  window.onresize = debounce(alignLastSectionToHeader, 500, { trailing: true });
</script>
