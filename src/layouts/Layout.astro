---
import "@/styles/global.css";
import Header from "@/components/MainHeader.astro";

interface Props {
  // if isHome is true, padding will be added, and nav and socials will be included in header.
  isHome: boolean;
  title?: string;
  subtitle?: string;
  details?: string;
  navItems?: string[];
  content?: string;
}

const {
  isHome,
  title,
  subtitle,
  details,
  navItems = undefined,
  content,
} = Astro.props;

const metadata = {
  title: "Jasper Wang",
  author: "Jasper Wang",
  description:
    "Jasper Wang is a software developer with a deep passion for solving problems. Educated in Computer Science and psychology in UBC.",
};
---

<!doctype html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="author" content={metadata.author} />
    <meta name="description" content={metadata.description} />
    <title>{metadata.title}</title>
    <link
      rel="icon"
      type="image/png"
      href="/favicon/favicon-96x96.png"
      sizes="96x96"
    />
    <link rel="icon" type="image/svg+xml" href="/favicon/favicon.svg" />
    <link rel="shortcut icon" href="/favicon/favicon.ico" />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/favicon/apple-touch-icon.png"
    />
    <meta name="apple-mobile-web-app-title" content="JW" />
    <link rel="manifest" href="/favicon/site.webmanifest" />
  </head>
  <body>
    <div class={`container ${!isHome && "container--alt"}`}>
      <Header
        isHome={isHome}
        title={title}
        subtitle={subtitle}
        details={details}
        navItems={navItems}
        content={content}
      />
      <main class={!isHome && "main--alt"}>
        <slot />
        <footer>
          <small>
            Built with love using <a href="https://astro.build/" target="_blank"
              >Astro</a
            >, designed with inspiration from various websites on <a
              href="https://www.awwwards.com/"
              target="_blank">awwwards.com</a
            >
          </small>
          <br />
          <small>Â© Jasper Wang {new Date().getFullYear()}</small>
        </footer>
      </main>
    </div>
    <div id="cursor"></div>
  </body>
</html>

<style is:global>
  a {
    text-decoration: none;
    transition-duration: 500ms;
    color: rgba(var(--primary-text-value), 0.8);
  }

  a:hover {
    color: rgba(var(--primary-text-value), 1);
  }

  main > * + * {
    margin-block-start: var(--space-2xl);
  }

  main {
    padding-left: var(--space-l);
    padding-right: var(--space-l);
    position: relative;
  }

  footer,
  .footer--alt {
    font-family: "CommitMono VariableFont", monospace;
    position: relative;
    /** this is to balance out the padding for MainHeader **/
    padding-bottom: var(--space-2xl);
  }

  footer small {
    color: rgba(var(--primary-text-value), 0.6);
  }

  @media only screen and (min-width: 1024px) {
    /** reset padding back **/
    footer,
    .footer--alt {
      padding-bottom: initial;
    }

    main {
      width: 60%;
      padding: var(--space-2xl) var(--space-l);
    }

    .main--alt {
      width: 70%;
    }

    main > * + * {
      margin-block-start: var(--space-3xl);
    }
  }

  /* Animated Cursor Styling */
  #cursor {
    display: none;
    position: fixed;
    top: -5px;
    left: -5px;
    width: 40px;
    height: 40px;
    background-color: #333333;
    border-radius: 50%;
    pointer-events: none;
    mix-blend-mode: difference;
    z-index: 999;
    transition: all 200ms cubic-bezier(0.09, 0.55, 0.59, 0.97);
  }

  .hover-over-a {
    width: 20px !important;
    height: 20px !important;
    background-color: white !important;
    mix-blend-mode: difference !important;
  }

  .hover-over-text {
    opacity: 0.15;
  }

  /* Cap the width on tablet size */
  .container {
    max-width: 40rem;
    margin: 0 auto;
  }

  @media only screen and (min-width: 1024px) {
    body {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .container {
      display: flex;
      flex: 1;
      padding-left: var(--space-s);
      padding-right: var(--space-s);
      max-width: 65rem;
      position: relative;
      overflow-y: visible;
    }

    .container--alt {
      max-width: 75rem;
    }

    section {
      scroll-margin-top: 5rem;
      transition-duration: 500ms;
    }

    #cursor {
      display: block;
    }
  }

  .toggled {
    opacity: 1 !important;
  }

  svg,
  path {
    pointer-events: none;
  }
</style>

<script>
  /**
   * Handles focus and unfocus of sections
   */
  const sections = document.querySelectorAll("section");

  const options = {
    rootMargin: "-40% 0px -60% 0px",
  };

  const intersectionCallback = (
    entries: IntersectionObserverEntry[],
    _observer: IntersectionObserver,
  ) => {
    entries.forEach((entry) => {
      const navTarget = document.getElementById(
        `${entry.target.getAttribute("id")}Nav`,
      );

      if (entry.isIntersecting) {
        // nav target may be excluded from being tracked
        navTarget?.classList.add("toggled");
        return;
      }
      navTarget?.classList.remove("toggled");
    });
  };

  const navObserver = new IntersectionObserver(intersectionCallback, options);
  sections.forEach((section) => navObserver.observe(section));

  /**
   * Handles cursor animations
   */
  const cursor = document.getElementById("cursor");

  const followCursorHandler = (e: MouseEvent) => {
    cursor.style.transform = `translate(${e.clientX}px, ${e.clientY}px)`;
  };

  document.body.addEventListener("mousemove", (e) => {
    followCursorHandler(e);
  });

  document.body.addEventListener("mouseover", (e) => {
    const hasAnchorParent = (e.target as HTMLElement).closest("a");
    const isAnchor = (e.target as HTMLElement).tagName === "A";

    hasAnchorParent || isAnchor
      ? cursor.classList.add("hover-over-a")
      : cursor.classList.remove("hover-over-a");

    if (isAnchor) return;

    const textElements = ["H1", "H2", "P", "SPAN"];
    textElements.indexOf((e.target as HTMLElement).tagName) >= 0
      ? cursor.classList.add("hover-over-text")
      : cursor.classList.remove("hover-over-text");
  });
</script>
